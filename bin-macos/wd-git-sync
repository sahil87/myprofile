#!/usr/bin/env bash
set -e

WORK_DIR=$(pwd)

# Array of repositories to sync with upstream
REPOS=(
  "wd-db"
  "wd-api"
  "wd-api-auth"
  "wd-api-ai"
  "wd-portal2"
  "wd-web"
)

echo "=== Starting upstream sync for all repos ==="
echo ""

# Sync each repository with upstream/main
for repo in "${REPOS[@]}"; do
  if [ ! -d "$repo" ]; then
    echo "⚠️  Skipping $repo (directory does not exist)"
    continue
  fi

  echo "📦 Processing $repo..."
  cd "$repo"

  # 1. Save any uncommitted work
  if [[ -n $(git status -s) ]]; then
    echo "  → Stashing uncommitted changes"
    git stash push -u -m "Auto-stash before upstream sync $(date +%Y-%m-%d_%H:%M:%S)"
  else
    echo "  → Working directory clean"
  fi

  # 2. Fetch from upstream
  echo "  → Fetching upstream..."
  if git remote | grep -q "^upstream$"; then
    git fetch upstream
  else
    echo "  ⚠️  No 'upstream' remote configured, skipping"
    cd "$WORK_DIR"
    continue
  fi

  # 3. Move local main to upstream/main
  echo "  → Resetting main to upstream/main"
  git checkout main 2>/dev/null || git checkout -b main upstream/main
  git reset --hard upstream/main

  # 4. Force push to origin/main
  echo "  → Force pushing to origin/main"
  git push origin main --force-with-lease

  echo "  ✅ $repo synced successfully"
  echo ""

  cd "$WORK_DIR"
done

echo "=== Sync complete ==="
